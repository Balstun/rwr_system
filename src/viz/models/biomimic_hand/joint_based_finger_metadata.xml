<mujoco>
<compiler angle="radian" meshdir="mesh/finger"/>
  <default>
      <!-- use same geom params as the Shadow Hand model in IsaacGymEnv for now -->
      <!-- the density is adjusted so that the total weight of the hand part (not including the base) is the same as the real hand (106g) (therefore the base will have a wrong mass, which shouldn't matter for now) -->
      <geom rgba="1 1 1 1" type="mesh" density="662" friction="1 0.005 0.001" condim="3" margin="0.0005" contype="1" conaffinity="1"/>

      <!-- use same joint params as IsaacGymEnv for now -->
      <!-- TODO: joint damping and position control kp should eventually be set to sysID'ed values -->
      <joint type="hinge" limited="true" damping="0.05" armature="0.001" margin="0.01" frictionloss="0.001" range="-3.14 3.14"/>

      <!-- actuator configuration -->
      <position gear="2" kp="0.5"/> 

      <!-- the tendon which limits the two joints creating the rolling joint should be very limited in its length range -->
      <!-- NOTE: This is only true for tendons used for rolling contact joints -->
      <tendon limited="true" range="-0.001 0.001" stiffness="10" damping="0.01"/>
  </default>

  <asset>
    <mesh name="base" file="finger_base_link.stl" scale="0.001 0.001 0.001"/>
    <mesh name="abduct_mesh" file="finger_link_2.stl" scale="0.001 0.001 0.001"/>
    <mesh name="pp_mesh" file="finger_pp_link.stl" scale="0.001 0.001 0.001"/>
    <mesh name="mp_mesh" file="finger_mp_link.stl" scale="0.001 0.001 0.001"/>
    <mesh name="dp_adapter_mesh" file="finger_dp_adapter.stl" scale="0.001 0.001 0.001"/>
  </asset>

  <contact>
    <exclude body1="base" body2="abduct_link"/>
    <exclude body1="abduct_link" body2="pp_link"/>
    <exclude body1="pp_link" body2="mp_link"/>
    <exclude body1="mp_link" body2="dp_adapter"/>
  </contact>

  <sensor>
   <!-- TODO add sensors when needed -->
  </sensor>

  <actuator>
    <!-- 
    For this version of the Faive Hand, the first two joints aren't rolling contact joints.
    This means those fingers move 0.5x as much as the rolling contact joints with the same joint angle goal.
    Thus, set kp for these joints to be half the default value of 2, to effectively achieve the same joint stiffness.
    The actuators for the distal joints are set to have a kp twice the default value, since they must move two joints.
    
    The joints with rolling contacts bend twice as much as the commanded joint angle. This is different from the implementation in GripperController, which receive the total joint angle as input.
    i.e. if 0.1 is sent to a rolling contact joint in mujoco, the joint bends 0.2 in total, achieving the same result as sending 0.2 in GripperController.
    
    note: the "gear" attribute allows a scaling to be applied from the actuator dimensions to the joint dimensions, but it seems not to be completely supported in IsaacGym so don't use it.
    -->
    <position name="mcp" tendon="mcp_actuate_tendon" ctrlrange="0 1.57"/>
    <position name="adb" tendon="adb_actuate_tendon" gear="4" ctrlrange="-0.52 0.52"/> 

    <position name="pip" joint="pp2mp" ctrlrange="0 1.57"/>
  </actuator>

  <tendon>
    <!-- The below tendons are used to couple the abduct and adduct motors to actuate either as an MCP or as Ab/duction -->
    <!-- The idea is that the coef sets the coupling (parallel or antiparallel) and the actuator acts directly on the tendon instead of the joint -->
    <fixed name="mcp_actuate_tendon" limited="false">
      <joint joint="base2abduct" coef="0.85"/>
      <joint joint="base2adduct" coef="0.85"/>
    </fixed>

    <fixed name="adb_actuate_tendon" limited="false">
      <joint joint="base2abduct" coef="-0.38"/>
      <joint joint="base2adduct" coef="0.38"/>
    </fixed>

    

    <!-- All the tendons below are used to specify the coupling of the virtual and real joints to simulate a rolling joint. -->
    <!--<fixed name="base2abduct">
      <joint joint="base2abduct_virt" coef="-1"/>
      <joint joint="base2abduct" coef="1"/>
    </fixed>
    <fixed name="base2adduct">
      <joint joint="base2adduct_virt" coef="-1"/>
      <joint joint="base2adduct" coef="1"/>
    </fixed>-->

    <fixed name="base2abduct">
      <joint joint="base2abduct_virt" coef="-1"/>
      <joint joint="base2abduct" coef="1"/>
    </fixed>
    <fixed name="base2adduct" >
      <joint joint="base2adduct_virt" coef="-1"/>
      <joint joint="base2adduct" coef="1"/>
    </fixed>

    <!-- The relation here is that it's a linear combination. We're actuating the abduct/adduct 
    motors and basde on that, there's a scaled amount of movement in the pp joint.
    TODO: Measure practically the ranges of motion for both the joints and adjust the control ranges and this equation-->
    <fixed name="abduct2pp">
      <joint joint="base2abduct_virt" coef="5"/>
      <joint joint="abduct2pp" coef="-1"/>
    </fixed>
    <fixed name="adduct2pp">
      <joint joint="base2adduct_virt" coef="5"/>
      <joint joint="adduct2pp" coef="-1"/>
    </fixed>
    <fixed name="pp2mp_virt">
      <joint joint="abduct2pp_virt" coef="1"/>
      <joint joint="abduct2pp" coef="-1"/>
    </fixed>
    <fixed name="pp2mp_virt_2">
      <joint joint="adduct2pp_virt" coef="1"/>
      <joint joint="adduct2pp" coef="-1"/>
    </fixed>
    <fixed name="pp2mp">
      <joint joint="pp2mp_virt" coef="1"/>
      <joint joint="pp2mp" coef="-1"/>
    </fixed>
    <fixed name="pp2dp">
      <joint joint="pp2mp" coef="0.9"/>
      <joint joint="mp2dp_virt" coef="-1"/>
    </fixed>
    <fixed name="mp2dp_passive">
      <joint joint="mp2dp_virt" coef="1"/>
      <joint joint="mp2dp" coef="-1"/>
    </fixed>
  </tendon>
</mujoco>
